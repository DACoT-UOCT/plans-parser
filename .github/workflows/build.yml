on:
  push:
    branches:
      - "master"
  pull_request:

name: CI
jobs:
  add-reviews:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - uses: kentaro-m/auto-assign-action@v1.1.2
  coverage_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          cd dacot_models && pip install . && cd ..
      - name: Run coverage tool
        run: |
          coverage run -m unittest -v
      - name: Generate xml coverage report
        run: |
          coverage report -m
          coverage xml -i
      - name: Generate pylint report
        run: |
          pushd ..
          pylint backend/ --output-format=parseable -r n --exit-zero > backend/pylint_report.txt
          popd
          sed -i 's|^backend/||g' pylint_report.txt
      - name: Generate flake8 report
        run: |
          flake8 --exit-zero . > flake8_report.txt
      - name: Upload xml coverage report
        uses: actions/upload-artifact@v2.2.3
        with:
          name: report
          path: coverage.xml
      - name: Upload pylint report
        uses: actions/upload-artifact@v2.2.3
        with:
          name: report
          path: pylint_report.txt
      - name: Upload flake8 report
        uses: actions/upload-artifact@v2.2.3
        with:
          name: report
          path: flake8_report.txt
  sonarcloud:
    runs-on: ubuntu-latest
    needs: [coverage_test]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage report
        uses: actions/download-artifact@v2.0.8
        with:
          name: report
      - name: List files in coverage report
        run: |
          ls -lah /home/runner/work/backend/backend
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=repo_lower::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
        id: repo
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ steps.repo.outputs.repo_lower }}/fastapi
          tag_with_sha: true
          tag_with_ref: true
  build_export_agent_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=repo_lower::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
        id: repo
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v1
        with:
          dockerfile: Dockerfile.export-agent
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ steps.repo.outputs.repo_lower }}/export-agent
          tag_with_sha: true
          tag_with_ref: true